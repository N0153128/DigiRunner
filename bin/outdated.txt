import java.util.Arrays;

public class Depricated.Atom {
 
	double num = 100 + (Math.random() * 50);
	
	public static boolean jumpSearch(int[] arry, int query) {
		
//	 	System.out.println("Original value: ");
//	 	for (int i = 0; i < arry.length; i++) {
//	 	 	System.out.print(arry[i] + " ");
//	 	};
//	 	
	 	Arrays.sort(arry);
//	 	System.out.println("\nModified value:");
//	 	for (int i = 0; i < arry.length; i++) {
//	 	 	System.out.print(arry[i] + " ");
//	 	}
	 
		double div = Math.sqrt(arry.length);
		int i = 0;
		boolean found = false;
		while (true) {
		 System.out.println(i);
		 	if (i > arry.length) {
		 	 	int y = arry.length % i;
		 	 	i -= y;
		 	 	
		 	} else if (arry[i] == query) {
				return true;
				
			} else if (arry[i] > query) {
				
				for (int j = i-(int)(div); j < arry.length; j++) {
					if (arry[j] == query) {
						return true;
					}
				}
				
				if (!found) {
					break;
				}
			 }
			i+=div;
		}	
		return found;
	}
	
	public static int[] arrGenerator(int len) {
		
		int result[] = new int[len];
		for (int i = 0; i < len; i++) {
			result[i] = (int)(1 + Math.random() * 100);
		}
		
		return result;
	}
	
	public static void atomGenerator() {
		int atom = 0;
		while (true) {
			if (Depricated.Atom.jumpSearch(Depricated.Atom.arrGenerator(100), (int)(100+ Math.random() * 100))) {
				atom++;
				System.out.println(atom);
			}
		}	
	}

	public static void main (String[] args) {
//	 	Depricated.Atom.jumpSearch(Depricated.Atom.arrGenerator(100000), (int)(100+ Math.random() * 10000));
		while (true) {
			Depricated.Atom.atomGenerator();
		}
	}

}